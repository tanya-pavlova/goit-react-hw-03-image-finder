{"version":3,"sources":["components/styles.module.css","services/Api.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/Loader/Loader.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","searchQuery","currentPage","axios","get","then","response","data","hits","Searchbar","state","searchName","handleQueryChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","className","styles","this","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","name","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","webformatImage","onClickImage","onClick","ImageGalleryItemImage","src","alt","ImageGallery","images","map","id","webformatURL","largeImageURL","Button","showModal","onClickButton","window","scrollTo","top","document","documentElement","scrollHeight","behavior","Container","modalRoot","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","target","addEventListener","removeEventListener","createPortal","Overlay","image","Spinner","color","height","timeout","width","App","selectedImage","isLoading","status","onChangeQuery","query","fetchImages","options","imagesApi","length","prevState","catch","finally","toggleModal","prevProps","Error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cda70867.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"styles_Container__2v2ZF\",\"Error\":\"styles_Error__3PzE4\",\"App\":\"styles_App__1X_52\",\"Searchbar\":\"styles_Searchbar__1oabO\",\"SearchForm\":\"styles_SearchForm__3iHwX\",\"SearchFormButton\":\"styles_SearchFormButton__3ITso\",\"SearchFormButtonLabel\":\"styles_SearchFormButtonLabel__b_jMI\",\"SearchFormInput\":\"styles_SearchFormInput__2i35-\",\"ImageGallery\":\"styles_ImageGallery__7AWVP\",\"ImageGalleryItem\":\"styles_ImageGalleryItem__3K9gf\",\"ImageGalleryItemImage\":\"styles_ImageGalleryItemImage__12SZh\",\"Overlay\":\"styles_Overlay__3LiIH\",\"Modal\":\"styles_Modal__faJwT\",\"Button\":\"styles_Button__Y69-a\"};","import axios from 'axios';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst MY_KEY = '20792904-7b714194335b4ba783f2ee189';\nconst TYPE = 'photo';\nconst ORIENTATION = 'horizontal';\n\nconst fetchImages = ({ searchQuery = '', currentPage = 1 }) => {\n  return axios\n    .get(\n      `${BASE_URL}?key=${MY_KEY}&q=${searchQuery}&image_type=${TYPE}&orientation=${ORIENTATION}&page=${currentPage}&per_page=12`,\n    )\n    .then(response => response.data.hits);\n};\n\nexport default { fetchImages };\n","\r\nimport { Component } from 'react';\r\nimport styles from '../styles.module.css'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default class Searchbar extends Component {\r\n    state = {\r\n\r\n        searchName: '',\r\n    };\r\n\r\n    handleQueryChange = event => {\r\n        this.setState({ searchName: event.currentTarget.value.toLowerCase() });\r\n    }\r\n\r\n    handleSubmit = event => {\r\n\r\n        event.preventDefault();\r\n\r\n        if (this.state.searchName.trim() === '') {\r\n            toast.error('Вы ничего не ввели');\r\n        }\r\n        this.props.onSubmit(this.state.searchName);\r\n        this.setState({ searchName: '' });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.Searchbar}>\r\n                <form onSubmit={this.handleSubmit} className={styles.SearchForm}>\r\n                    <button type=\"submit\" className={styles.SearchFormButton}>\r\n                        <span className={styles.SearchFormButtonLabel}>Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className={styles.SearchFormInput}\r\n                        type=\"text\"\r\n                        name=\"searchName\"\r\n                        value={this.state.searchName}\r\n                        onChange={this.handleQueryChange}\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                    />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../styles.module.css'\r\n\r\nconst ImageGalleryItem = ({ webformatImage, onClickImage }) => (\r\n    <li\r\n        className={styles.ImageGalleryItem}\r\n        onClick={onClickImage}>\r\n\r\n        <img\r\n            className={styles.ImageGalleryItemImage}\r\n            src={webformatImage}\r\n            alt=\"\" />\r\n    </li>\r\n)\r\n\r\nImageGalleryItem.propTypes = {\r\n    webformatImage: PropTypes.string.isRequired,\r\n    onClickImage: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ImageGalleryItem;","\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from \"../ImageGalleryItem\";\r\nimport styles from '../styles.module.css'\r\n\r\nconst ImageGallery = ({ images, onClickImage }) => (\r\n    <ul className={styles.ImageGallery}>\r\n        {images.map(({ id, webformatURL, largeImageURL }) => (\r\n\r\n            <ImageGalleryItem key={id} webformatImage={webformatURL} onClickImage={() => onClickImage(largeImageURL)} />\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n    onClickImage: PropTypes.func.isRequired,\r\n    images: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            webformatURL: PropTypes.string.isRequired,\r\n            largeImageURL: PropTypes.string.isRequired,\r\n        }).isRequired,\r\n    ).isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import PropTypes from 'prop-types';\r\nimport styles from '../styles.module.css'\r\n\r\nconst Button = ({ showModal, onClickButton }) => {\r\n    !showModal && window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n    });\r\n\r\n    return (\r\n        <div className={styles.Container}>\r\n            <button\r\n                className={styles.Button}\r\n                type='button'\r\n                onClick={onClickButton}\r\n            >\r\n                Load more\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\n\r\nButton.propTypes = {\r\n    onClickButton: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Button;","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../styles.module.css'\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    handleBackdropClick = event => {\r\n        if (event.currentTarget === event.target) {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return createPortal(\r\n            <div className={styles.Overlay} onClick={this.handleBackdropClick}>\r\n                <div className={styles.Modal} >\r\n                    <img src={this.props.image} alt=\"\" />\r\n                </div>\r\n            </div>,\r\n            modalRoot,\r\n        );\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    image: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Modal;","import Loader from 'react-loader-spinner';\r\nimport styles from '../styles.module.css'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className={styles.Container}>\r\n            <Loader\r\n                type=\"ThreeDots\"\r\n                color=\"#711771\"\r\n                height={100}\r\n                timeout={1100}\r\n                width={100}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\nimport imagesApi from './services/Api';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\nimport styles from './components/styles.module.css';\nimport { ToastContainer } from 'react-toastify';\nimport Spinner from './components/Loader/Loader';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nclass App extends Component {\n  state = {\n    images: [],\n    searchQuery: '',\n    currentPage: 1,\n    error: null,\n    selectedImage: '',\n    showModal: false,\n    isLoading: false,\n    status: 'idle',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      if (this.state.searchQuery.trim() === '') {\n        return;\n      } else {\n        this.fetchImages();\n        this.setState({ status: 'resolved' });\n        if (this.state.images.length === 0) {\n          this.setState({ status: 'idle' });\n        }\n      }\n    }\n  }\n\n  onChangeQuery = query => {\n    this.setState({\n      images: [],\n      searchQuery: query,\n      currentPage: 1,\n      error: null,\n    });\n  };\n\n  fetchImages = () => {\n    const { searchQuery, currentPage } = this.state;\n    const options = { searchQuery, currentPage };\n\n    this.setState({ isLoading: true });\n\n    imagesApi\n      .fetchImages(options)\n      .then(images => {\n        if (images.length === 0) {\n          this.setState({ error: 'No any picture', status: 'rejected' });\n        } else {\n          this.setState(prevState => ({\n            images: [...prevState.images, ...images],\n            currentPage: prevState.currentPage + 1,\n            status: 'resolved',\n          }));\n        }\n      })\n      .catch(error => this.setState({ error, status: 'rejected' }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  toggleModal = image => {\n    this.setState(({ showModal }) => ({\n      selectedImage: !showModal ? image : '',\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { images, status, selectedImage, showModal, isLoading } = this.state;\n\n    return (\n      <>\n        <div className={styles.App}>\n          <Searchbar onSubmit={this.onChangeQuery} />\n          <ImageGallery images={images} onClickImage={this.toggleModal} />\n          {isLoading && <Spinner />}\n          {status === 'rejected' && (\n            <p className={styles.Error}>Ничего не найдено :( </p>\n          )}\n          {status === 'resolved' && (\n            <Button showModal={showModal} onClickButton={this.fetchImages} />\n          )}\n        </div>\n        {selectedImage && (\n          <Modal image={selectedImage} onClose={this.toggleModal} />\n        )}\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}